import React, { Component, useEffect, useState } from "react";
import { useHistory } from "react-router-dom";
import { Form, FormGroup, Input, Alert, NavLink } from "reactstrap";
import Button from "@material-ui/core/Button";
import Joi from "joi-browser";
import { apiCall, displayLog } from "../util/common";
import queryString from "query-string";
import QueueAnim from "rc-queue-anim";

const Resetpassword = (props) => {
  const [newPas, setNew] = useState("");
  const [confirm, setConfirm] = useState("");
  const [showNew, setShowNew] = useState(false);
  const [showConfirm, setShowConfirm] = useState(false);
  const history = useHistory();
  const params = queryString.parse(props.location.search);

  const submitHandler = async () => {
    if (newPas == "") {
      displayLog(0, "New password is required");
    } else if (confirm == "") {
      displayLog(0, "Confirm password is required");
    } else if (confirm != newPas) {
      displayLog(0, "New password and Confirm password must be same");
    } else {
      const reqData = {
        new_password: newPas,
        confirm_password: confirm,
        token: params.token,
      };
      setNew("");
      setConfirm("");
      const response = await apiCall("POST", "resetPassword", reqData);
      if (response.code == 1) {
        displayLog(1, "Password has been successfully reset");
        await history.push("/signin");
      }
    }
  };

  const showPasswordNew = () => {
    setShowNew(true);
  };

  const hidePasswordNew = () => {
    setShowNew(false);
  };

  const showPasswordCon = () => {
    setShowConfirm(true);
  };

  const hidePasswordCon = () => {
    setShowConfirm(false);
  };

  return (
    <QueueAnim type="top" duration={1000} interval={1000}>
      <div className="rct-session-wrapper signin_back" key="1">
        <div className="session-inner-wrapper">
          <div className="container">
            <div className="Center">
              <div className="col-sm-10 col-md-10 col-lg-8">
                <div className="session-body text-center">
                  <h1
                    style={{
                      letterSpacing: "0.6px",
                      fontSize: "2.875rem",
                      color: "#223263",
                      display: "inline-block",
                      textTransform: "capitalize",
                      margin: 0,
                      fontWeight: "normal",
                    }}
                  >
                    {/* PMISFBAC */}
                    <img
                      style={{ width: "350px" }}
                      src={require("../assets/img/pmi_chapter_san_francisco_bay_area_logo.png")}
                    />
                  </h1>
                  <p
                    style={{
                      letterSpacing: "0.6px",
                      fontSize: "1.2rem",
                      color: "#223263",
                      textTransform: "capitalize",
                      margin: 0,
                      fontWeight: "normal",
                      color: "white",
                      display: "flex",
                      justifyContent: "center",
                    }}
                  >
                    RESET PASSWORD
                  </p>

                  <FormGroup className="has-wrapper">
                    <span className="has-icon">
                      <i className="ti-lock"></i>
                    </span>

                    <Input
                      style={{ height: "52px" }}
                      type={showNew == true ? "text" : "password"}
                      id="new_password"
                      onChange={(e) => setNew(e.target.value)}
                      value={newPas}
                      placeholder="New password"
                      name="new_password"
                      className="has-input input-lg"
                    />
                    {showNew == false ? (
                      <span
                        className="show_hide"
                        title="Show Password"
                        onClick={showPasswordNew}
                      >
                        <i className="zmdi zmdi-eye"></i>
                      </span>
                    ) : (
                      <span
                        className="show_hide_2"
                        title="Hide Password"
                        onClick={hidePasswordNew}
                      >
                        <i className="zmdi zmdi-eye-off"></i>
                      </span>
                    )}
                  </FormGroup>
                  <FormGroup className="has-wrapper">
                    <span className="has-icon">
                      <i className="ti-lock"></i>
                    </span>

                    <Input
                      style={{ height: "52px" }}
                      type={showConfirm == true ? "text" : "password"}
                      id="confirm_password"
                      onChange={(e) => setConfirm(e.target.value)}
                      value={confirm}
                      placeholder="Confirm password"
                      name="confirm_password"
                      className="has-input input-lg"
                    />
                    {showConfirm == false ? (
                      <span
                        className="show_hide_2"
                        title="Show Password"
                        onClick={showPasswordCon}
                      >
                        <i className="zmdi zmdi-eye"></i>
                      </span>
                    ) : (
                      <span
                        className="show_hide_2"
                        title="Hide Password"
                        onClick={hidePasswordCon}
                      >
                        <i className="zmdi zmdi-eye-off"></i>
                      </span>
                    )}
                  </FormGroup>
                  <FormGroup className="mb-0">
                    <Button
                      color="primary"
                      className="btn-block text-white w-100"
                      variant="contained"
                      size="large"
                      style={{
                        fontSize: "20px",
                        fontWeight: 600,
                        borderRadius: "10px",
                      }}
                      onClick={() => submitHandler()}
                    >
                      SUBMIT
                    </Button>
                  </FormGroup>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </QueueAnim>
  );
};

export default Resetpassword;
